{%- from "collectd/map.jinja" import collectd_settings with context %}

#
# DO NOT EDIT
#
# This file is managed by salt via {{ source }}
# Modify the config that generates this file instead
#

LoadPlugin java

<Plugin "java">
  # required JVM argument is the classpath
  # JVMArg "-Djava.class.path=/installpath/collectd/share/collectd/java"
  # Since version 4.8.4 (commit c983405) the API and GenericJMX plugin are
  # provided as .jar files.
  JVMARG "-Djava.class.path=/usr/share/collectd/java/collectd-api.jar:/usr/share/collectd/java/generic-jmx.jar"
  LoadPlugin "org.collectd.java.GenericJMX"

  <Plugin "GenericJMX">
    # Memory usage by memory pool.
    <MBean "memory_pool">
      ObjectName "java.lang:type=MemoryPool,*"
      InstancePrefix "memory_pool-"
      InstanceFrom "name"
      <Value>
        Type "memory"
        #InstancePrefix ""
        #InstanceFrom ""
        Table true
        Attribute "Usage"
      </Value>
    </MBean>

    <MBean "garbage_collector">
      ObjectName "java.lang:type=GarbageCollector,*"
      InstancePrefix "gc-"
      InstanceFrom "name"
  
      <Value>
        Type "invocations"
        #InstancePrefix ""
        #InstanceFrom ""
        Table false
        Attribute "CollectionCount"
      </Value>
  
      <Value>
        Type "total_time_in_ms"
        InstancePrefix "collection_time"
        #InstanceFrom ""
        Table false
        Attribute "CollectionTime"
      </Value>
  
    # # Not that useful, therefore commented out.
    # <Value>
    #   Type "threads"
    #   #InstancePrefix ""
    #   #InstanceFrom ""
    #   Table false
    #   # Demonstration how to access composite types
    #   Attribute "LastGcInfo.GcThreadCount"
    # </Value>
    </MBean>

    # Heap memory usage
    <MBean "memory-heap">
      ObjectName "java.lang:type=Memory"
      #InstanceFrom ""
      InstancePrefix "memory-heap"
  
      # Creates four values: committed, init, max, used
      <Value>
        Type "jmx_memory"  
        #InstancePrefix ""
        #InstanceFrom ""
        Table true
        Attribute "HeapMemoryUsage"
      </Value>
    </MBean>

    # Non-heap memory usage
    <MBean "memory-nonheap">
      ObjectName "java.lang:type=Memory"
      #InstanceFrom ""
      InstancePrefix "memory-nonheap"
      # Creates four values: committed, init, max, used
      <Value>
        Type "jmx_memory"  
        #InstancePrefix ""
        #InstanceFrom ""
        Table true
        Attribute "NonHeapMemoryUsage"
      </Value>
    </MBean>

    #####################
    # Connection blocks #
    #####################
    <Connection>
      ServiceURL "service:jmx:rmi:///jndi/rmi://{{ collectd_settings.plugins.java.host }}:{{ collectd_settings.plugins.java.port }}/jmxrmi"
{%- if collectd_settings.plugins.java.user is defined and collectd_settings.plugins.java.user %}
      User "{{ user }}"
{%- endif %}
{%- if collectd_settings.plugins.java.password is defined and collectd_settings.plugins.java.password %}
      Password "{{ pass }}"
{%- endif %}
      Host "{{ collectd_settings.plugins.java.host }}"
      Collect "memory_pool"
      Collect "classes"
      Collect "compilation"
      Collect "garbage_collector"
      Collect "memory-heap"
      Collect "memory-nonheap"
    </Connection>
  </Plugin>
</Plugin>
